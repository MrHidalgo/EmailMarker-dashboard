{"version":3,"sources":["_shared/_fonts.scss","app.css","_shared/_main-setting-reset.scss","_shared/_grid.scss","_utilities/_mixin.scss"],"names":[],"mappings":"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","file":"../app.css","sourcesContent":["///\n/// Mixin generate @font-face\n/// ===============\n@mixin mixinFontFace($fontName, $fontNameExt, $fontPath, $fontWeight, $fontExtension: eot woff2 woff ttf svg) {\n\t$src: null;\n\t$srcEot: null;\n\n\t$extensionModObj: (\n\t\teot: \"?iefix\",\n\t\tsvg: \"#\" + $fontName\n\t);\n\n\t$formats: (\n\t\teot: \"embedded-opentype\",\n\t\totf: \"opentype\",\n\t\tttf: \"truetype\"\n\t);\n\n\t@each $ext in $fontExtension {\n\n\n\t\t$extensionModsValue:\n\t\t\tif(map-has-key($extensionModObj, $ext), $ext + map-get($extensionModObj, $ext), $ext);\n\n\t\t$format:\n\t\t\tif(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n\n\n\t\t@if($ext == \"eot\") {\n\t\t\t$srcEot:\n\t\t\t\tappend($srcEot, url(quote($fontPath + $fontName + $fontNameExt + \".\" + $ext)));\n\t\t\t$src:\n\t\t\t\tappend($src,\n\t\t\t\t\turl(quote($fontPath + $fontName + $fontNameExt + \".\" + $extensionModsValue)) format(quote($format)), comma\n\t\t\t\t);\n\t\t} @else {\n\t\t\t$src:\n\t\t\t\tappend($src,\n\t\t\t\t\turl(quote($fontPath + $fontName + $fontNameExt + \".\" + $extensionModsValue)) format(quote($format)), comma\n\t\t\t\t);\n\t\t}\n\t}\n\n\t@font-face {\n\t\tfont-family: quote($fontName);\n\n\t\tsrc: $srcEot;\n\t\tsrc: $src;\n\n\t\tfont-style: normal;\n\t\tfont-weight: $fontWeight;\n\t}\n}\n\n\n/// ===============\n/// CALL MIXIN FOR BUILD @FONT-FACE\n///\n/// Example:\n///\n/// @include mixinFontFace(\"JournalRegular\", \"-Bold\", \"../fonts/\", normal, otf eot woff2 woff ttf svg);\n/// @include mixinFontFace(\"SF-Pro-Text\", \"-Bold\", \"../fonts/\", bold, otf);\n/// @include mixinFontFace(\"SF-Pro-Text\", \"-Heavy\", \"../fonts/\", 800, otf);\n///\n/// ===============\n//@import url('https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900');\n\n@include mixinFontFace(\"SFCompactText\", \"-Bold\", \"../fonts/\", bold, woff2 woff ttf);\n@include mixinFontFace(\"SFCompactText\", \"-Light\", \"../fonts/\", 200, woff2 woff ttf);\n@include mixinFontFace(\"SFCompactText\", \"-Heavy\", \"../fonts/\", 900, woff2 woff ttf);\n@include mixinFontFace(\"SFCompactText\", \"-Semibold\", \"../fonts/\", 600, woff2 woff ttf);\n@include mixinFontFace(\"SFCompactText\", \"-Medium\", \"../fonts/\", 500, woff2 woff ttf);\n@include mixinFontFace(\"SFCompactText\", \"-Regular\", \"../fonts/\", normal, woff2 woff ttf);\n","@font-face {\n  font-family: \"SFCompactText\";\n  src: url(\"../fonts/SFCompactText-Bold.woff2\") format(\"woff2\"), url(\"../fonts/SFCompactText-Bold.woff\") format(\"woff\"), url(\"../fonts/SFCompactText-Bold.ttf\") format(\"truetype\");\n  font-style: normal;\n  font-weight: bold;\n}\n\n@font-face {\n  font-family: \"SFCompactText\";\n  src: url(\"../fonts/SFCompactText-Light.woff2\") format(\"woff2\"), url(\"../fonts/SFCompactText-Light.woff\") format(\"woff\"), url(\"../fonts/SFCompactText-Light.ttf\") format(\"truetype\");\n  font-style: normal;\n  font-weight: 200;\n}\n\n@font-face {\n  font-family: \"SFCompactText\";\n  src: url(\"../fonts/SFCompactText-Heavy.woff2\") format(\"woff2\"), url(\"../fonts/SFCompactText-Heavy.woff\") format(\"woff\"), url(\"../fonts/SFCompactText-Heavy.ttf\") format(\"truetype\");\n  font-style: normal;\n  font-weight: 900;\n}\n\n@font-face {\n  font-family: \"SFCompactText\";\n  src: url(\"../fonts/SFCompactText-Semibold.woff2\") format(\"woff2\"), url(\"../fonts/SFCompactText-Semibold.woff\") format(\"woff\"), url(\"../fonts/SFCompactText-Semibold.ttf\") format(\"truetype\");\n  font-style: normal;\n  font-weight: 600;\n}\n\n@font-face {\n  font-family: \"SFCompactText\";\n  src: url(\"../fonts/SFCompactText-Medium.woff2\") format(\"woff2\"), url(\"../fonts/SFCompactText-Medium.woff\") format(\"woff\"), url(\"../fonts/SFCompactText-Medium.ttf\") format(\"truetype\");\n  font-style: normal;\n  font-weight: 500;\n}\n\n@font-face {\n  font-family: \"SFCompactText\";\n  src: url(\"../fonts/SFCompactText-Regular.woff2\") format(\"woff2\"), url(\"../fonts/SFCompactText-Regular.woff\") format(\"woff\"), url(\"../fonts/SFCompactText-Regular.ttf\") format(\"truetype\");\n  font-style: normal;\n  font-weight: normal;\n}\n\n/* line 1, src/scss/_shared/_main-setting-reset.scss */\nhtml,\nbody {\n  width: 100%;\n  min-height: 100vh;\n}\n\n/* line 6, src/scss/_shared/_main-setting-reset.scss */\nhtml.is-hideScroll,\nbody.is-hideScroll {\n  position: fixed;\n  width: 100%;\n  overflow: hidden !important;\n}\n\n/* line 14, src/scss/_shared/_main-setting-reset.scss */\nhtml {\n  -ms-overflow-style: scrollbar;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n/* line 20, src/scss/_shared/_main-setting-reset.scss */\nbody {\n  overflow-x: hidden;\n  position: relative;\n  margin: 0;\n  padding: 0;\n  background-color: #F9FBFC;\n  line-height: 1.42857143;\n  font-size: 14px;\n  font-weight: normal;\n  font-family: \"SFCompactText\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* line 34, src/scss/_shared/_main-setting-reset.scss */\nbody {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n/* line 39, src/scss/_shared/_main-setting-reset.scss */\nbody > .body {\n  overflow-x: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1 0 auto;\n}\n\n/* line 46, src/scss/_shared/_main-setting-reset.scss */\nbody > .body--start {\n  justify-content: flex-start;\n}\n\n/* line 53, src/scss/_shared/_main-setting-reset.scss */\n* {\n  box-sizing: border-box;\n}\n\n/* line 56, src/scss/_shared/_main-setting-reset.scss */\n*:before, *:after {\n  box-sizing: border-box;\n}\n\n/* line 63, src/scss/_shared/_main-setting-reset.scss */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-size: 100%;\n  margin: 0;\n}\n\n/* line 73, src/scss/_shared/_main-setting-reset.scss */\nbutton,\ninput {\n  overflow: visible;\n}\n\n/* line 79, src/scss/_shared/_main-setting-reset.scss */\nbutton[disabled] {\n  opacity: 0.55;\n  cursor: not-allowed;\n}\n\n/* line 85, src/scss/_shared/_main-setting-reset.scss */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n/* line 91, src/scss/_shared/_main-setting-reset.scss */\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/* line 97, src/scss/_shared/_main-setting-reset.scss */\ntextarea {\n  overflow: auto;\n}\n\n/* line 102, src/scss/_shared/_main-setting-reset.scss */\np,\nh1, h2, h3, h4, h5, h6,\nhr {\n  margin: 0;\n  padding: 0;\n}\n\n/* line 110, src/scss/_shared/_main-setting-reset.scss */\nul {\n  margin: 0;\n  padding: 0;\n}\n\n/* line 114, src/scss/_shared/_main-setting-reset.scss */\nul li {\n  list-style: none;\n}\n\n/* line 120, src/scss/_shared/_main-setting-reset.scss */\na {\n  outline: none;\n  text-decoration: none;\n}\n\n/* line 124, src/scss/_shared/_main-setting-reset.scss */\na:hover, a:focus {\n  text-decoration: none;\n}\n\n/* line 131, src/scss/_shared/_main-setting-reset.scss */\ninput[type=\"text\"] {\n  appearance: none;\n}\n\n/* line 135, src/scss/_shared/_main-setting-reset.scss */\npicture {\n  display: flex;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n/* line 8, src/scss/_shared/_grid.scss */\n.c-grid, .c-grid-fluid {\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: 15px;\n  padding-left: 15px;\n}\n\n/* line 20, src/scss/_shared/_grid.scss */\n.c-grid {\n  max-width: 1300px;\n}\n\n/* line 27, src/scss/_shared/_grid.scss */\n.c-grid-fluid {\n  max-width: 100%;\n}\n\n@media screen and (min-width: 576px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1300px;\n  }\n}\n\n@media screen and (min-width: 992px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1300px;\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1300px;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1300px;\n  }\n}\n\n@media screen and (min-width: 1366px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1300px;\n  }\n}\n","html,\nbody {\n  width: 100%;\n  min-height: 100vh;\n\n  &.is-hideScroll {\n    position: fixed;\n    width: 100%;\n    overflow: hidden !important;\n  }\n}\n\n\nhtml {\n  -ms-overflow-style: scrollbar;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n\nbody {\n  overflow-x: hidden;\n  position: relative;\n  margin: 0;\n  padding: 0;\n  background-color: #F9FBFC;\n  line-height: 1.42857143;\n  font-size: 14px;\n  font-weight: normal;\n  font-family: \"SFCompactText\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n\n  > .body {\n\t\toverflow-x: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1 0 auto;\n\n    &--start {\n      justify-content: flex-start;\n    }\n  }\n}\n\n\n* {\n  box-sizing: border-box;\n\n  &:before,\n  &:after {\n    box-sizing: border-box;\n  }\n}\n\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-size: 100%;\n  margin: 0;\n}\n\n\nbutton,\ninput {\n  overflow: visible;\n}\n\n\nbutton[disabled] {\n  opacity: 0.55;\n  cursor: not-allowed;\n}\n\n\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n\ntextarea {\n  overflow: auto;\n}\n\n\np,\nh1, h2, h3, h4, h5, h6,\nhr {\n  margin: 0;\n  padding: 0;\n}\n\n\nul {\n  margin: 0;\n  padding: 0;\n\t\n  li {\n    list-style: none;\n  }\n}\n\n\na {\n  outline: none;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n}\n\n\ninput[type=\"text\"] {\n  appearance: none;\n}\n\npicture {\n  display: flex;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n","///\n/// ADDITIONALLY\n/// ===============\n$maxWidth: 1300px;\n$paddingLeft: 15px;\n$paddingRight: $paddingLeft;\n\n%grid {\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: $paddingRight;\n  padding-left: $paddingLeft;\n}\n\n\n///\n/// MAIN\n/// ===============\n.c-grid {\n  @extend %grid;\n  @if($maxWidth) {\n    max-width: $maxWidth;\n  }\n\n\n  &-fluid {\n    @extend %grid;\n    max-width: 100%;\n  }\n}\n\n\n// for develop - pls del for production\n.c-grid {\n  @include respond(small) {\n    max-width: $maxWidth;\n  }\n  @include respond(large) {\n    max-width: $maxWidth;\n  }\n  @include respond(extra-large) {\n    max-width: $maxWidth;\n  }\n  @include respond(medium) {\n    max-width: $maxWidth;\n  }\n  @include respond(wide-small) {\n    max-width: $maxWidth;\n  }\n}\n","////\n/// @group  Mixin\n////\n\n/// \n/// Mixin setting the width and height element.\n///\n/// @name   mixinDimensions\n///\n/// @param  {String}  $width             - The width property sets the width of an element.\n/// @param  {String}  $height  [$width]  - The height property sets the height of an element.\n///\n/// @see    $object\n///\n/// @example\n///   <selector> {\n///     @include mixinDimensions(100%);\n///     @include mixinDimensions(100%, 50%);\n///   }\n///\n@mixin dimensions($width, $height:$width) {\n\twidth: $width;\n\theight: $height;\n}\n\n\n///\n/// Mixin generate animation. It uses an additional function :\n/// - **map-get()**   - returns the value in a map associated with the given key. If the map doesn’t have such a key, returns null;\n/// - **map-merge()** - Merges two maps together into a new map. Keys in $map2 will take precedence over keys in $map1;\n///\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#map_get-instance_method       map-get()\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#map_merge-instance_method     map-merge()\n///\n/// @name   mixinKeyframes\n///\n/// @param  {String}  $keyName - Animation Name\n/// @param  {Object}  $options\n///\n/// @example\n///   <selector> {\n///     @include moduleKeyframes(clockLeft,\n///       (\n///         opacityStart      : 0.8,\n///         opacityEnd        : 1,\n///         transformStart    : rotate(360deg)\n///       )\n///       ||\n///       (\n///         opacityStart      : 0.5,\n///         opacityEnd        : 1,\n///         transformDouble   : (rotate(-360deg) scale(0.5))\n///       )\n///     );\n///   }\n///\n@mixin keyframes($keyName, $options: ()) {\n\t$configuration: map-merge((), $options);\n\n\t@keyframes #{$keyName} {\n\t\tfrom {\n\t\t\topacity: map-get($configuration, opacityStart);\n\t\t\ttransform: map-get($configuration, transformStart);\n\t\t}\n\t\tto {\n\t\t\topacity: map-get($configuration, opacityEnd);\n\t\t\ttransform: map-get($configuration, transformEnd);\n\t\t}\n\t}\n}\n\n\n///\n/// Mixin horizontal centered\n///\n@mixin marginAuto {\n\tmargin: {\n\t\tleft: auto;\n\t\tright: auto;\n\t}\n}\n\n\n///\n/// Mixin placeholder for: input, textarea\n///\n@mixin inputPlaceholder {\n\t&.placeholder { @content; }\n\t&:-moz-placeholder { @content; }\n\t&::-moz-placeholder { @content; }\n\t&:-ms-input-placeholder { @content; }\n\t&::-webkit-input-placeholder { @content; }\n}\n\n\n///\n/// Mixin css triangle\n///\n@mixin pseudo($display: block, $pos: absolute, $content: ''){\n\tcontent: $content;\n\tdisplay: $display;\n\tposition: $pos;\n}\n@mixin cssTriangle($color, $direction, $size: 6px, $position: absolute, $round: false){\n\t@include pseudo($pos: $position);\n\n\twidth: 0;\n\theight: 0;\n\n\t@if ($round) {\n\t\tborder-radius: 3px;\n\t}\n\n\t@if ($direction == down) {\n\t\tborder-left: $size solid transparent;\n\t\tborder-right: $size solid transparent;\n\t\tborder-top: $size solid $color;\n\t\tmargin-top: 0 - round( $size / 2.5 );\n\t} @else if ($direction == up) {\n\t\tborder-left: $size solid transparent;\n\t\tborder-right: $size solid transparent;\n\t\tborder-bottom: $size solid $color;\n\t\tmargin-bottom: 0 - round( $size / 2.5 );\n\t} @else if ($direction == right) {\n\t\tborder-top: $size solid transparent;\n\t\tborder-bottom: $size solid transparent;\n\t\tborder-left: $size solid $color;\n\t\tmargin-right: -$size;\n\t} @else if ($direction == left) {\n\t\tborder-top: $size solid transparent;\n\t\tborder-bottom: $size solid transparent;\n\t\tborder-right: $size solid $color;\n\t\tmargin-left: -$size;\n\t}\n}\n\n\n///\n/// Mixin center: vertical, horizontal, or both\n///\n@mixin centered($prop: absolute, $position: both) {\n\tposition: $prop;\n\n\t@if ($position == 'vertical') {\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t}\n\t@else if ($position == 'horizontal') {\n\t\tleft: 50%;\n\t\ttransform: translate(-50%);\n\t}\n\t@else if ($position == 'both') {\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t}\n}\n\n\n///\n/// Mixin transition\n///\n@mixin transition($rest...) {\n\t$list: null;\n\t$duration: null;\n\t$idx: null;\n\n\t@each $prop in ($rest) {\n\t\t$idx: str_index(inspect($prop), \"0.\");\n\n\t\t@if($idx == null) {\n\t\t\t$duration: 0.3s;\n\t\t}\n\n\t\t$list: append($list, $prop $duration ease-in-out, comma);\n\t}\n\n\ttransition: $list;\n}\n\n\n///\n/// Mixin fluid\n///\n/// @example\n///\n///\t\t<selector> {\n///\t\t\t// single\n///\t\t\t@include fluid(font-size, 320px, 1366px, 14px, 22px);\n///\n///\t\t\t// multiple\n///\t\t\t@include fluid(padding-bottom padding-top, 20em, 70em, 2em, 4em);\n///\n///\t\t}\n///\n@mixin fluid($properties, $min-vw, $max-vw, $min-value, $max-value) {\n\t@each $property in $properties {\n\t\t#{$property}: $min-value;\n\t}\n\n\t@media screen and (min-width: $min-vw) {\n\t\t@each $property in $properties {\n\t\t\t#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});\n\t\t}\n\t}\n\n\t@media screen and (min-width: $max-vw) {\n\t\t@each $property in $properties {\n\t\t\t#{$property}: $max-value;\n\t\t}\n\t}\n}\n\n\n///\n/// Mixin consistent Font Sizes\n///\n///\t@name font-size\n///\n/// @example\n///\n///\t\tp {\n///  \t\t@include font-size(14px)\n///\t\t}\n///\n///\n@mixin font-size($size) {\n\tfont-size: $size;\n\tfont-size: calculateRem($size);\n}\n\n\n///\n/// Mixin Quick Gradients\n///\n///\t@name background-gradient\n///\n///\t@example\n///\n///\t\tselector {\n///\t\t\t@include background-gradient(red, black, 'vertical');\n///\t\t}\n///\n@mixin background-gradient($start-color, $end-color, $orientation) {\n\tbackground: $start-color;\n\n\t@if $orientation == 'vertical' {\n\t\tbackground: linear-gradient(to bottom, $start-color, $end-color);\n\t}\n\t@else if $orientation == 'horizontal' {\n\t\tbackground: linear-gradient(to right, $start-color, $end-color);\n\t}\n\t@else {\n\t\tbackground: radial-gradient(ellipse at center, $start-color, $end-color);\n\t}\n}\n\n\n///\n/// Mixin media queries.\n///\n$breakpointsMedia: (\n\textra-small     \t: \"(min-width: 320px)\", \t/// extra-small\n\tmax-extra-small \t: \"(max-width: 575px)\",\n\tsmall         \t\t: \"(min-width: 576px)\", \t/// small\n\tmax-small     \t\t: \"(max-width: 767px)\",\n\tmedium         \t\t: \"(min-width: 768px)\", \t/// medium\n\tmax-medium     \t\t: \"(max-width: 991px)\",\n\tlarge         \t\t: \"(min-width: 992px)\", \t/// large\n\tmax-large\t\t\t\t\t: \"(max-width: 1199px)\",\n\textra-large     \t: \"(min-width: 1200px)\",\t/// extra-large\n\tmax-extra-large \t: \"(max-width: 1365px)\",\n\twide-small      \t: \"(min-width: 1366px)\",\t/// wide-small\n\tmax-wide-small \t\t: \"(max-width: 1439px)\",\n\twide-medium     \t: \"(min-width: 1440px)\",\t/// wide-medium\n\tmax-wide-medium \t: \"(max-width: 1599px)\",\n\twide-large      \t: \"(min-width: 1600px)\",\t/// wide-large\n\tmax-wide-large    : \"(max-width: 1919px)\",\n\thd        \t\t\t\t: \"(min-width: 1920px)\"\t\t/// hd\n) !default;\n\n@mixin respond($name) {\n\t@if map-has-key($breakpointsMedia, $name) {\n\t\t@media screen and #{inspect(map-get($breakpointsMedia, $name))} {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@warn \"Unfortunately, no value could be retrieved from `#{$breakpointsMedia}`. Please make sure it is defined in `$breakpointsMedia` map.\";\n\t}\n}\n@mixin respondCustom($val) {\n\t@media screen and #{$val} {\n\t\t@content;\n\t}\n}\n@mixin adaptive($val) {\n\t@media screen and (max-width: #{$val}px) {\n\t\t@content;\n\t}\n}\n"],"sourceRoot":"../../src"}